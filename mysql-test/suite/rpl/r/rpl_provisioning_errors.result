include/rpl_provisioning_init_row.inc
SET GLOBAL debug_dbug="+d,provisioning_test_running";
SET GLOBAL debug_dbug="+d,provisioning_test_running";
DROP DATABASE test;
SET GLOBAL slave_run_triggers_for_rbr=YES;
LOAD DATA FROM MASTER;
ERROR HY000: Option slave-run-triggers-for-rbr is turned on, if master contains any triggers provisioned database may not match masters, turn it off before proceeding
SET GLOBAL slave_run_triggers_for_rbr=NO;
START SLAVE SQL_THREAD;
LOAD DATA FROM MASTER;
ERROR HY000: This operation cannot be performed as you have a running slave ''; run STOP SLAVE '' first
include/stop_slave_sql.inc
START SLAVE IO_THREAD;
LOAD DATA FROM MASTER;
ERROR HY000: This operation cannot be performed as you have a running slave ''; run STOP SLAVE '' first
include/stop_slave_io.inc
CREATE TABLE test.t1 (a int);
INSERT INTO test.t1 VALUES (1), (2), (3), (4), (5);
call mtr.add_suppression("Slave I/O: Provisioning failed with error code .* and message: .Table does not contain primary key. while processing `test`.`t1`, Internal MariaDB error code: ");
include/load_data_from_master.inc
include/wait_for_slave_io_error.inc [errno=1980]
Last_IO_Error = 'Provisioning failed with error code 1980 and message: 'Table does not contain primary key' while processing `test`.`t1`'
RESET SLAVE;
DROP TABLE test.t1;
DROP DATABASE IF EXISTS test;
SET GLOBAL debug_dbug="+d,provisioning_wait";
include/load_data_from_master.inc
START SLAVE;
ERROR HY000: Provisioning is already running, run STOP SLAVE command to interrupt it
SET GLOBAL debug_dbug="-d,provisioning_wait";
include/rpl_provisioning_wait_to_stop.inc
START SLAVE;
include/stop_slave.inc
RESET SLAVE;
DROP DATABASE IF EXISTS test;
SET GLOBAL debug_dbug="+d,provisioning_wait";
include/load_data_from_master.inc
CREATE TABLE test.t2 (a int, PRIMARY KEY (a));
include/wait_for_slave_sql_error.inc [errno=1984]
SET GLOBAL debug_dbug="-d,provisioning_wait";
include/wait_for_slave_io_to_stop.inc
RESET SLAVE;
DROP DATABASE IF EXISTS test;
DROP TABLE test.t2;
include/rpl_provisioning_end.inc
DROP DATABASE IF EXISTS test;
CREATE DATABASE test;
SET GLOBAL debug_dbug="";
SET GLOBAL debug_dbug="";
DROP DATABASE IF EXISTS test;
CREATE DATABASE test;
RESET SLAVE;
