# Generic / temporary test for MDEV-7502 Automatic provisioning of slave
# Tested functionality of LOAD DATA FROM MASTER - provisioning of objects
# with special character sets, collations and sql modes

--source include/rpl_provisioning_init.inc

--echo
--echo ----- Creating objects
--echo
--connection master
RESET MASTER;

USE `test`;

CREATE TABLE `t1` (a int, PRIMARY KEY (a));

DELIMITER |;

CREATE PROCEDURE `test`.`px`()
BEGIN
	SELECT CHARSET('a');
END|

CREATE FUNCTION `test`.`fx`(`str` TEXT CHARACTER SET utf8 COLLATE utf8_bin)
	RETURNS TEXT CHARACTER SET latin1 COLLATE latin1_bin
BEGIN
	SET @param_coll = COLLATION(`str`);
	RETURN `str`;
END|

CREATE TRIGGER tx BEFORE INSERT ON t1 FOR EACH ROW
BEGIN
  SET NEW.a = NEW.a * 2;
END|

CREATE EVENT test.ex
ON SCHEDULE EVERY 1024 YEAR STARTS '2038-01-19 03:14:07'
DO SELECT 1;|

DELIMITER ;|

SET @@local.character_set_connection= 'utf8';
SET @@local.character_set_client= 'utf8';
ALTER DATABASE test CHARACTER SET utf8 COLLATE utf8_general_ci;
SET sql_mode= 'ANSI_QUOTES';
SET time_zone= '+9:00';

DELIMITER |;

CREATE PROCEDURE `test`.`py`()
BEGIN
	SELECT CHARSET('a');
END|

CREATE FUNCTION `test`.`fy`(`str` TEXT CHARACTER SET utf8 COLLATE utf8_bin)
	RETURNS TEXT CHARACTER SET latin1 COLLATE latin1_bin
BEGIN
	SET @param_coll = COLLATION(`str`);
	RETURN `str`;
END|

CREATE TRIGGER ty BEFORE UPDATE ON t1 FOR EACH ROW
BEGIN
  SET NEW.a = NEW.a * 2;
END|

CREATE EVENT test.ey
ON SCHEDULE EVERY 1024 YEAR STARTS '2038-01-19 03:14:07'
DO SELECT 1;|

DELIMITER ;|

--echo
--echo ----- Show create statements from master
--echo
query_vertical SHOW CREATE PROCEDURE test.px;
query_vertical SHOW CREATE PROCEDURE test.py;
query_vertical SHOW CREATE FUNCTION test.fx;
query_vertical SHOW CREATE FUNCTION test.fy;
query_vertical SHOW CREATE TRIGGER test.tx;
query_vertical SHOW CREATE TRIGGER test.ty;
query_vertical SHOW CREATE EVENT test.ex;
query_vertical SHOW CREATE EVENT test.ey;

--echo
--echo ----- Start provisioning
--echo
--connection slave
LOAD DATA FROM MASTER;

# Provisioning is completed after sql thread was shut down
--source include/wait_for_slave_sql_to_stop.inc

--echo
--echo ----- Show create statements from slave
--echo
query_vertical SHOW CREATE PROCEDURE test.px;
query_vertical SHOW CREATE PROCEDURE test.py;
query_vertical SHOW CREATE FUNCTION test.fx;
query_vertical SHOW CREATE FUNCTION test.fy;
query_vertical SHOW CREATE TRIGGER test.tx;
query_vertical SHOW CREATE TRIGGER test.ty;
CALL `test`.`px`();
CALL `test`.`py`();
query_vertical SHOW CREATE EVENT test.ex;
query_vertical SHOW CREATE EVENT test.ey;

--echo
--echo ----- Cleanup
--echo
--connection master
DROP PROCEDURE `test`.`px`;
DROP PROCEDURE `test`.`py`;
DROP FUNCTION `test`.`fx`;
DROP FUNCTION `test`.`fy`;
ALTER DATABASE test CHARACTER SET latin1 COLLATE latin1_swedish_ci;
DROP TABLE `test`.`t1`;
DROP EVENT test.ex;
DROP EVENT test.ey;
SET GLOBAL debug_dbug="";

--connection slave
DROP PROCEDURE `test`.`px`;
DROP PROCEDURE `test`.`py`;
DROP FUNCTION `test`.`fx`;
DROP FUNCTION `test`.`fy`;
ALTER DATABASE test CHARACTER SET latin1 COLLATE latin1_swedish_ci;
DROP TABLE `test`.`t1`;
DROP EVENT test.ex;
DROP EVENT test.ey;
SET GLOBAL debug_dbug="";

--let $rpl_only_running_threads= 1
--source include/rpl_end.inc
